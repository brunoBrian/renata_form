{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'https://n8nio.vemprojuca.com';\n\n/**\n * Envia dados de contato para autorização FGTS\n * @param {{ cpf: string, celular: string, dataNascimento: string }} params\n */\nexport async function authorizeContact({\n  cpf,\n  celular,\n  dataNascimento\n}) {\n  var _window$vemprojucaCon, _window$vemprojucaCon2, _window$vemprojucaCon3, _window$vemprojucaCon4, _window$vemprojucaCon5, _window$vemprojucaCon6;\n  const {\n    data\n  } = await axios.post(`${BASE_URL}/webhook/simulate`, {\n    cpf: cpf.replace(/\\D/g, ''),\n    celular: celular.replace(/\\D/g, ''),\n    id_collaborator: '1',\n    id_store: '1',\n    datanascimento: dataNascimento,\n    acceptMessage: true,\n    acceptTerms: true,\n    host: ((_window$vemprojucaCon = window.vemprojucaConfig) === null || _window$vemprojucaCon === void 0 ? void 0 : _window$vemprojucaCon.host) || 'example.com',\n    userAgent: ((_window$vemprojucaCon2 = window.vemprojucaConfig) === null || _window$vemprojucaCon2 === void 0 ? void 0 : _window$vemprojucaCon2.userAgent) || 'Mozilla/5.0',\n    cid: ((_window$vemprojucaCon3 = window.vemprojucaConfig) === null || _window$vemprojucaCon3 === void 0 ? void 0 : _window$vemprojucaCon3.cid) || '123456789',\n    sid: ((_window$vemprojucaCon4 = window.vemprojucaConfig) === null || _window$vemprojucaCon4 === void 0 ? void 0 : _window$vemprojucaCon4.sid) || '987654321',\n    fbp: ((_window$vemprojucaCon5 = window.vemprojucaConfig) === null || _window$vemprojucaCon5 === void 0 ? void 0 : _window$vemprojucaCon5.fbp) || 'fb.1.123456789012345',\n    partner_id: ((_window$vemprojucaCon6 = window.vemprojucaConfig) === null || _window$vemprojucaCon6 === void 0 ? void 0 : _window$vemprojucaCon6.partner_id) || 'partner_001'\n  });\n  return data;\n}\n\n/**\n * Busca endereço pelo CEP\n * @param {string} cepUnmasked\n */\nexport async function getAddressByCep(cepUnmasked) {\n  const {\n    data\n  } = await axios.get(`https://viacep.com.br/ws/${cepUnmasked}/json/`);\n  return data;\n}\n\n/**\n * Cria uma proposta de antecipação FGTS\n * @param {Object} params - Dados da proposta\n */\nexport async function createProposal({\n  uuid,\n  parcelas,\n  nomeCompleto,\n  cep,\n  numero,\n  uf,\n  cidade,\n  bairro,\n  rua,\n  agencia,\n  conta,\n  digito,\n  tipoConta,\n  banco\n}) {\n  const {\n    data\n  } = await axios.post(`${BASE_URL}/webhook/proposal`, {\n    uuid,\n    parcelas,\n    nomecompleto: nomeCompleto,\n    cep,\n    endereconumero: numero,\n    uf,\n    cidade,\n    enderecocomplemento: '',\n    bairro,\n    rua,\n    agencia,\n    conta: `${conta}-${digito}`,\n    tipoconta: tipoConta,\n    banco\n  });\n  return data;\n}\n\n/**\n * Simula uma proposta com nova quantidade de parcelas\n * @param {{ uuid: string, parcelas: string | number }} params\n */\nexport async function simulateProposal({\n  uuid,\n  parcelas\n}) {\n  const {\n    data\n  } = await axios.post(`${BASE_URL}/webhook/parcelas`, {\n    uuid,\n    parcelas: parseInt(parcelas)\n  });\n  return data;\n}","map":{"version":3,"names":["axios","BASE_URL","authorizeContact","cpf","celular","dataNascimento","_window$vemprojucaCon","_window$vemprojucaCon2","_window$vemprojucaCon3","_window$vemprojucaCon4","_window$vemprojucaCon5","_window$vemprojucaCon6","data","post","replace","id_collaborator","id_store","datanascimento","acceptMessage","acceptTerms","host","window","vemprojucaConfig","userAgent","cid","sid","fbp","partner_id","getAddressByCep","cepUnmasked","get","createProposal","uuid","parcelas","nomeCompleto","cep","numero","uf","cidade","bairro","rua","agencia","conta","digito","tipoConta","banco","nomecompleto","endereconumero","enderecocomplemento","tipoconta","simulateProposal","parseInt"],"sources":["/Users/brunobrian/Documents/juca/renata_forms/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://n8nio.vemprojuca.com';\n\n/**\n * Envia dados de contato para autorização FGTS\n * @param {{ cpf: string, celular: string, dataNascimento: string }} params\n */\nexport async function authorizeContact({ cpf, celular, dataNascimento }) {\n  const { data } = await axios.post(\n    `${BASE_URL}/webhook/simulate`,\n    {\n      cpf: cpf.replace(/\\D/g, ''),\n      celular: celular.replace(/\\D/g, ''),\n      id_collaborator: '1',\n      id_store: '1',\n      datanascimento: dataNascimento,\n      acceptMessage: true,\n      acceptTerms: true,\n      host: window.vemprojucaConfig?.host || 'example.com',\n      userAgent: window.vemprojucaConfig?.userAgent || 'Mozilla/5.0',\n      cid: window.vemprojucaConfig?.cid || '123456789',\n      sid: window.vemprojucaConfig?.sid || '987654321',\n      fbp: window.vemprojucaConfig?.fbp || 'fb.1.123456789012345',\n      partner_id: window.vemprojucaConfig?.partner_id || 'partner_001'\n    }\n  );\n  return data;\n}\n\n/**\n * Busca endereço pelo CEP\n * @param {string} cepUnmasked\n */\nexport async function getAddressByCep(cepUnmasked) {\n  const { data } = await axios.get(\n    `https://viacep.com.br/ws/${cepUnmasked}/json/`\n  );\n  return data;\n}\n\n/**\n * Cria uma proposta de antecipação FGTS\n * @param {Object} params - Dados da proposta\n */\nexport async function createProposal({\n  uuid,\n  parcelas,\n  nomeCompleto,\n  cep,\n  numero,\n  uf,\n  cidade,\n  bairro,\n  rua,\n  agencia,\n  conta,\n  digito,\n  tipoConta,\n  banco,\n}) {\n  const { data } = await axios.post(\n    `${BASE_URL}/webhook/proposal`,\n    {\n      uuid,\n      parcelas,\n      nomecompleto: nomeCompleto,\n      cep,\n      endereconumero: numero,\n      uf,\n      cidade,\n      enderecocomplemento: '',\n      bairro,\n      rua,\n      agencia,\n      conta: `${conta}-${digito}`,\n      tipoconta: tipoConta,\n      banco,\n    }\n  );\n  return data;\n}\n\n/**\n * Simula uma proposta com nova quantidade de parcelas\n * @param {{ uuid: string, parcelas: string | number }} params\n */\nexport async function simulateProposal({ uuid, parcelas }) {\n  const { data } = await axios.post(\n    `${BASE_URL}/webhook/parcelas`,\n    {\n      uuid,\n      parcelas: parseInt(parcelas),\n    }\n  );\n  return data;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}